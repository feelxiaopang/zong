<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <context:annotation-config />
    <!-- 开启注解并扫描 base-package:需要扫描的包 -->
    <context:component-scan base-package="xyz.next"/>
    <!-- 开启注解aspectj切面 -->
    <aop:aspectj-autoproxy/>
	
	<!-- 数据源  dbcp -->
	<bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/test"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
	</bean>
	
	<!-- 配置hibernate的sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="packagesToScan" value="xyz.next.model"/>   
	<property name="hibernateProperties">
		<props>
			<!-- 打印SQL语句 --> 
			<prop key="hibernate.show_sql">true</prop> 
			<!-- 格式化SQL -->
			<prop key="hibernate.format_sql">true</prop>
			<!-- 通过hbm.XML转化为ddl语言 create：创建表；create-drop：创建表操作后删除； update：如果没有表，创建表，如果有表并且需要修改表结构，修改表结构 -->
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<!--指定连接的语言（方言）通过方言hibernate能判断数据库指定语句-->    
			<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
			<!-- 开启二级缓存 -->
	        <prop key="hibernate.cache.use_second_level_cache">true</prop>
	        <!-- 二级缓存的提供类 在hibernate4.0版本以后我们都是配置这个属性来指定二级缓存的提供类-->
	        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
	        <!-- 二级缓存配置文件的位置 -->
	        <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
		</props>
	</property>
	</bean>	
	<!-- 事务管理器 如果使用jdbc注入dataSource 如果是hibernate注入sessionFactory  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>	
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>